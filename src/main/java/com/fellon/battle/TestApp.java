package com.fellon.battle;

import com.fellon.battle.model.*;

import java.util.Scanner;

public class TestApp {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Lesta Battle Back!");

        boolean playing = true;

        while (playing) {
            // --- –°–û–ó–î–ê–ù–ò–ï –ì–ï–†–û–Ø ---
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –≥–µ—Ä–æ—è: ");
            String name = scanner.nextLine();

            System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å:");
            CharacterClass[] classes = CharacterClass.values();
            for (int i = 0; i < classes.length; i++) {
                System.out.println((i + 1) + ". " + classes[i]);
            }

            int classChoice = -1;
            while (classChoice < 1 || classChoice > classes.length) {
                System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–ª–∞—Å—Å–∞: ");
                if (scanner.hasNextInt()) {
                    classChoice = scanner.nextInt();
                    scanner.nextLine(); // –°—ä–µ–¥–∞–µ–º \n
                } else {
                    System.out.println("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ.");
                    scanner.nextLine(); // –°—ä–µ–¥–∞–µ–º –º—É—Å–æ—Ä
                }
            }

            CharacterClass chosenClass = classes[classChoice - 1];
            Hero hero = HeroFactory.createHero(name, chosenClass);

            System.out.println("\nüî∑ –ì–µ—Ä–æ–π —Å–æ–∑–¥–∞–Ω: " + hero.getName());
            System.out.println("–ö–ª–∞—Å—Å: " + hero.get–°urrentClass());
            System.out.println("–°—Ç–∞—Ç—ã: " + hero.getAttributes());
            System.out.println("–ó–¥–æ—Ä–æ–≤—å–µ: " + hero.getMaxHealth());
            System.out.println("–û—Ä—É–∂–∏–µ: " + hero.getWeapon().getName() + " (" + hero.getWeapon().getDamage() + " —É—Ä–æ–Ω–∞)");

            int wins = 0;

            // --- –¶–ò–ö–õ –ë–û–Ø ---
            while (wins < 3 && hero.getCurrentHealth() > 0) {
                Monster monster = MonsterFactory.createRandomMonster();
                System.out.println("\nüßü –ü–æ—è–≤–ª—è–µ—Ç—Å—è –º–æ–Ω—Å—Ç—Ä: " + monster.getName());
                System.out.println("‚Üí –û—Ä—É–∂–∏–µ: " + monster.getWeapon().getName());
                System.out.println("‚Üí –ó–¥–æ—Ä–æ–≤—å–µ: " + monster.getMaxHealth());
                System.out.println("‚Üí –°—Ç–∞—Ç—ã: " + monster.getAttributes());

                Battle battle = new Battle(hero, monster);
                Winner result = battle.fight();

                if (result == Winner.HERO) {
                    wins++;
                    System.out.println("üèÜ –ü–æ–±–µ–¥–∞! –ü–æ–±–µ–¥ –ø–æ–¥—Ä—è–¥: " + wins);
                    hero.restoreHealth(); // –ü–æ–¥–ª–µ—á–∏–º –≥–µ—Ä–æ—è
                    Weapon droppedWeapon = monster.getPresentedWeapon();
                    System.out.println("üí• –ú–æ–Ω—Å—Ç—Ä —É—Ä–æ–Ω–∏–ª: " + droppedWeapon.getName() + " (" + droppedWeapon.getDamage() + " —É—Ä–æ–Ω–∞)");
                    hero.levelUp(scanner, droppedWeapon);
                } else {
                    System.out.println("üíÄ –ì–µ—Ä–æ–π –ø–æ–≥–∏–±. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
                    break;
                }
            }

            // --- –ü–û–ë–ï–î–ê ---
            if (wins == 3) {
                System.out.println("üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤—Å–µ—Ö –º–æ–Ω—Å—Ç—Ä–æ–≤!");
            }

            // --- –•–û–¢–ò–¢–ï –°–´–ì–†–ê–¢–¨ –°–ù–û–í–ê? ---
            System.out.print("\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ");
            String input = scanner.nextLine().trim().toLowerCase();
            if (!input.equals("–¥–∞")) {
                playing = false;
            }
        }

        System.out.println("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, –≥–µ—Ä–æ–π!");
        scanner.close();
    }
}
